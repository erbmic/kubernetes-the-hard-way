- name: Create K8s Hard-Way VMs on libvirt (Ansible-only)
  hosts: localhost
  gather_facts: false
  vars_files:
    - ../vars/vms.yml
  collections:
    - community.libvirt
  vars:
    ssh_key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
  tasks:
    - name: Ensure cloud image present
      get_url:
        url: "{{ image_url }}"
        dest: "../images/jammy.qcow2"
        mode: "0644"
      register: img
    - name: Create base volume per VM (backed by cloud image)
      virt_pool:
        command: refresh
        name: "{{ libvirt_pool }}"
    - name: Create VM disks (qcow2)
      virt_volume:
        pool: "{{ libvirt_pool }}"
        name: "{{ item.name }}.qcow2"
        capacity: "{{ item.disk_gb }}G"
        backing_store: "../images/jammy.qcow2"
        format: qcow2
        state: present
      loop: "{{ vms }}"

    - name: Render cloud-init user-data
      template:
        src: "../cloudinit/user-data.tpl"
        dest: "../cloudinit/{{ item.name }}-user-data"
        mode: "0644"
      loop: "{{ vms }}"
      vars:
        name: "{{ item.name }}"
        ssh_key: "{{ ssh_key | default('') }}"

    - name: Render cloud-init network-config
      template:
        src: "../cloudinit/network-config.tpl"
        dest: "../cloudinit/{{ item.name }}-network-config"
        mode: "0644"
      loop: "{{ vms }}"
      vars:
        ip: "{{ item.ip }}"
        gw: "{{ item.gw }}"
        dns: "{{ item.dns }}"

    - name: Make NoCloud seed ISO
      command: >
        cloud-localds
        ../cloudinit/{{ item.name }}-seed.iso
        ../cloudinit/{{ item.name }}-user-data
        ../cloudinit/{{ item.name }}-network-config
      args:
        creates: "../cloudinit/{{ item.name }}-seed.iso"
      loop: "{{ vms }}"

    - name: Define and start VMs
      virt:
        name: "{{ item.name }}"
        state: running
        memory_mb: "{{ item.mem_mb }}"
        vcpus: "{{ item.vcpus }}"
        autostart: true
        networks:
          - network: "{{ libvirt_network }}"
            # static IP per cloud-init; libvirt DHCP nicht erforderlich
        disks:
          - name: "{{ item.name }}.qcow2"
            pool: "{{ libvirt_pool }}"
          - name: "{{ item.name }}-seed.iso"
            pool: "default"
            device: cdrom
        boot: hd,cdrom
        graphics: none
        os_type: linux
        arch: x86_64
      loop: "{{ vms }}"

    - name: Wait for SSH to be available (22/tcp)
      wait_for:
        host: "{{ item.ip.split('/')[0] }}"
        port: 22
        timeout: 300
      loop: "{{ vms }}"
